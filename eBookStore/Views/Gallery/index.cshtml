@model eBookStore.Models.ViewModels.GalleryPageViewModel
@{
    ViewData["Title"] = "Gallery";
    

    foreach (var book in Model.allBooks)
    {
    Console.WriteLine(book.coverModel);
    }


    
}

<div class="Gallery-container d-flex">


    <div class="d-flex flex-column flex-shrink-0 p-3 bg-secondary" style="width: 280px;">
        <h4 class="text-center">Categorys</h4>

        <hr>
            <ul class="categorysList nav nav-pills flex-column mb-auto">

                <li class="nav-item">
                    <a href="#" class="nav-link active" data-genre="all" aria-current="page">
                        <svg class="bi me-2"  width="16" height="16"><use xlink:href="#home"/></svg>
                        All-Caregorys
                    </a>
                </li>

                @foreach(var cate in Model.listOfCategorys)
                {
                    <li>
                        <a href="#" data-genre="@cate.Replace(" ","-")" class="nav-link link-dark">
                            <svg class="bi me-2"  width="16" height="16"><use xlink:href="#speedometer2"/></svg>
                            @cate
                        </a>
                    </li>
                }

            </ul>
        <hr>


    </div>


    <div class="flex-column w-100 ms-4 ">

        <div class="row">
            <hr>
            <div class="col">
                <h2>Welcome to the book gallery:</h2>
            </div>
            

            

            <div class="col d-flex">

                <div class="search-container end-0">
                    <div class="search-wrapper">
                        <input type="text" 
                        id="searchInput"
                        class="form-control search-input" 
                        placeholder="Search"
                        aria-label="Search">
                        <i class="bi bi-search search-icon"></i>
                    </div>
            </div>
            <div class="dropdown show mt-2">
                    <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" >
                        Order-By
                    </a>

                    <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                        <a class="dropdown-item" href="#">Price Increase</a>
                        <a class="dropdown-item" href="#">Price Decrease</a>
                        <a class="dropdown-item" href="#">Most Popular</a>
                        <a class="dropdown-item" href="#">Genre</a>
                        <a class="dropdown-item" href="#">Year of Publishing</a>
                    </div>
                </div> 
                
            </div>
                      

        <hr class="mt-2">

        </div>
        

        <!--Books Gallery-->
        <div class="Books-Container row" style="row-gap: 10px; column-gap: 10px;">

            @foreach(var book in Model.allBooks)
            {
                <div class="card book-item h-100" data-genre="@book?.genreModel?.name.Replace(" ", "-")" style="width: 18rem; padding-left: 0px; padding-right: 0px;">
                    
                    
                    <div class="imageWrapp">
                        <a href="@Url.Action("Index", "Book")/@book?.book?.id">
                            <img src="\images\bookCovers\@book.coverModel.imgName" class="card-img-top" alt="@book.coverModel.imgName">
                        </a>
                    </div>
                    
                    <div class="card-body d-grid">
                        <h5 class="card-title">@book.book.title</h5>
                        <!-- Need to Fix onSale logic + Price history-->
                        @if(book.book.onSale)
                        {
                            <p class="card-text">
                                    <a>Author: Need Fix </a><br> 
                                    <a>Published by: @string.Join(", ", book.publishers.Select(p => p.name))</a><br>
                                    <a>Genre: @book.genreModel.name</a><br>
                                    <a>Age limit: @book.book.ageLimit</a><br>
                                    <a>Publish date: @book.book.pubDate</a><br>
                                    <a>Rating: @book.book.starRate</a><br>
                                    <a class="text-muted text-decoration-line-through">Original Price: @book.book.priceHistory$</a><br>
                                    <a>Sale Price: @book.book.buyingPrice$</a>

                            </p>
                        }
                        else
                        {
                            <p class="card-text">
                                <a>Author: Need Fix </a><br> 
                                <a>Published by: @string.Join(", ", book.publishers.Select(p => p.name))</a><br>
                                <a>Genre: @book.genreModel.name</a><br>
                                <a>Age limit: @book.book.ageLimit</a><br>
                                <a>Publish date: @book.book.pubDate</a><br>
                                <a>Rating: @book.book.starRate</a><br>
                                <a>Price: @book.book.priceHistory$</a><br>
                            </p>

                        }

                        @if(book.book.canBorrow)
                        {
                            <div class="price-container card-footer text-center" style="background-color:white">
                                <div class="row" style="column-gap: 5px;">
                                    <div class="col" style="background-color: rgb(74, 234, 133);" id="Buy-Button">
                                        <a href="#" class="Buy-button">Buy</a>
                                    </div>
                                    <div class="col" style="background-color: rgb(85, 83, 210);" id="Borrow-Button">
                                        <a href="#" class="Borrow-button">Borrow</a>
                                    </div>
                                </div>
                            </div>
                        }   
                        else
                        {
                            <div class="price-container card-footer">
                                <a href="#" class="Buy-button text-center">Buy</a>
                            </div>

                        }
                    </div>
                </div> 
            }


        </div>





    </div>


</div>



@section Scripts {

<script>

    const BookCards = document.querySelector('.Book-Cards');
    const bookCategorysContainer = document.querySelector('.categorysList');
    var galleryModel = @Json.Serialize(Model);

    var categoryList = galleryModel.listOfCategorys;
    console.log(categoryList);




    document.addEventListener('DOMContentLoaded', () => {
        const categoryLinks = document.querySelectorAll('.categorysList .nav-link');
        const books = document.querySelectorAll('.book-item');

        categoryLinks.forEach(link => {


            link.addEventListener('click', (e) => {
                e.preventDefault();
                const genre = e.target.closest('a').getAttribute('data-genre');

                // Highlight active link
                categoryLinks.forEach(l => l.classList.remove('active'));
                e.target.closest('a').classList.add('active');

                // Filter books
                books.forEach(book => {
                    if (genre === 'all' || book.getAttribute('data-genre') === genre) {
                        book.style.display = 'block';
                    } else {
                        book.style.display = 'none';
                    }
                });
            });


        });
    });

    document.querySelectorAll('.dropdown-item').forEach(item => {
    item.addEventListener('click', event => {
        console.log(event.target.textContent); // Log the selected item
        // Add sorting/filtering logic here
    });
});



</script>

}
