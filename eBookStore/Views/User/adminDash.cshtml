@model eBookStore.Models.ViewModels.AdminDashViewModel
@{
    
}


<div class="d-flex">
    <div class="d-flex flex-column flex-shrink-0 p-3 bg-secondary" style="width: 280px; height: 100h;">
        <ul class="adminFunctions nav nav-pills flex-column mb-auto">
            <li class="nav-item">
                <a href="#" class="nav-link active" data-function="generalData" aria-current="page">
                    <svg class="bi me-2" width="16" height="16"><use xlink:href="#home"/></svg>
                    General Data
                </a>
            </li>
            <li>
                <a href="#" data-function="galleryManagerDisplay" class="nav-link link-dark">
                    <svg class="bi me-2" width="16" height="16"><use xlink:href="#speedometer2"/></svg>
                    Manage Gallery
                </a>
            </li>
            <li>
                <a href="#" data-function="ManageUsersDisplay" class="nav-link link-dark">
                    <svg class="bi me-2" width="16" height="16"><use xlink:href="#speedometer2"/></svg>
                    Manage Users
                </a>
            </li>
            <li>
                <a href="#" data-function="discount" class="nav-link link-dark">
                    <svg class="bi me-2" width="16" height="16"><use xlink:href="#speedometer2"/></svg>
                    Create Discount
                </a>
            </li>
        </ul>
    </div>

    <!-- מקום להצגת הנתונים -->
    <div id="dataDisplay" class="flex-grow-1 p-3">


        <!-- Manage Gallery -->
        <div class="galleryManagerDisplay" style="display:none">
            <h1>Add Book</h1>
            <p>Fill all the req fields:</p>

            <form method="post" enctype="multipart/form-data" asp-action="CreateBook">
                <fieldset>
                    <h3>Book Info</h3>
                    <div>
                        <label for="bookViewModel.genreModel.name">Category:</label>
                        <input type="text" name="bookViewModel.genreModel.name" />
                    </div>
                    <div>
                        <label for="bookViewModel.book.title">Title:</label>
                        <input type="text" name="bookViewModel.book.title" />
                    </div>
                    <div>
                        <label for="bookViewModel.book.borrowPrice">Borrow Price($):</label>
                        <input type="text" name="bookViewModel.book.borrowPrice" />
                    </div>
                    <div>
                        <label for="bookViewModel.book.buyingPrice">Buy Price($):</label>
                        <input type="text" name="bookViewModel.book.buyingPrice" />
                    </div>
                    <div>
                        <label for="bookViewModel.book.pubDate">Publish Date:</label>
                        <input type="date" name="bookViewModel.book.pubDate" />
                    </div>
                    <div>
                        <label for="bookViewModel.book.ageLimit">Age Limit:</label>
                        <input type="text" name="bookViewModel.book.ageLimit" />
                    </div>
                    <div>
                        <label for="bookViewModel.book.canBorrow">Borrowable:</label>
                        <input type="checkbox" name="bookViewModel.book.canBorrow" />
                    </div>
                </fieldset>
                <fieldset>
                    <h3>Publisher Info</h3>
                    <div>
                        <label for="bookViewModel.publisherModel.name">Publisher:</label>
                        <input type="text" name="bookViewModel.publisherModel.name" />
                    </div>
                </fieldset>
                <fieldset>
                    <h3>Author Info</h3>
                    <div>
                        <label for="bookViewModel.authorModel.name">Author Name:</label>
                        <input type="text" name="bookViewModel.authorModel.name" />
                    </div>
                </fieldset>
                <fieldset>
                    <h3>Book Cover</h3>
                    <div>
                        <label for="coverImage">Upload Book Cover (JPG only):</label>
                        <input type="file" id="coverImage" name="bookViewModel.coverModel.imgName" accept=".jpg,.jpeg" />
                    </div>
                </fieldset>
                <button type="submit" class="upload-butt btn btn-primary">Upload</button>
            </form>
            
            <!-- Delete Book Form -->
            <form method="post" asp-action="DeleteBook">
                <fieldset>
                    <h3>Delete Book</h3>
                    <div>
                        <label for="bookIdToDelete">Book name:</label>
                        <input type="text" id="bookIdToDelete" name="title" required />
                    </div>
                </fieldset>
                <button type="submit" class="btn btn-danger">Delete Book</button>
            </form>

        </div>

        <!-- Manage users§-->


        <div id="ManageUsersDisplay" class="ManageUsersDisplay row" style="display:none">
            <!-- User List Section -->
            <div class="ListOfUsers col-4" style="background-color: black; color: white; padding: 10px; border-radius: 5px;">
                <h3>User List</h3>
                <ul style="list-style: none; padding: 0;">
                    @if (Model.allUsers != null && Model.allUsers.Any())
                    {
                        @foreach (var user in Model.allUsers)
                        {
                            <li class="nav-item" style="margin-bottom: 10px;">
                                <a href="#" class="nav-link" data-username="@user.username" 
                                data-email="@user.email"
                                data-firstname="@user.firstName" 
                                data-lastname="@user.lastName"
                                data-phone="@user.phoneNumber" 
                                data-type="@user.type" 
                                style="color: white; text-decoration: none;">
                                    @user.username
                                </a>
                            </li>
                        }
                    }
                    else
                    {
                        <li>No users available.</li>
                    }
                </ul>
            </div>

            <!-- User Details Section -->
            <div class="UserDetails col-8" style="background-color: #f9f9f9; padding: 20px; border-radius: 5px;">
                <h3>User Details</h3>
                <div id="UserDetailsContent">
                    <p>Select a user from the list to view their details.</p>
                </div>
            </div>
        </div>

        <div class="CrateDiscaountDisplay">
                <!-- Discount Form -->
            <div class="discount" style="display:none">
                <h1>Create Discount</h1>
                <p>Fill in the details below to create a discount for a book:</p>

                <form method="post" asp-controller="User" asp-action="ApplyDiscount">
                    <fieldset>
                        <div>
                            <label for="title">Book Name:</label>
                            <input type="text" id="title" name="_title" required />
                        </div>
                        <div>
                            <label for="discountPercentage">Discount Percentage (%):</label>
                            <input type="text" id="discountPercentage" name="discountPercentage" min="0" max="1" required />
                        </div>
                        <div>
                            <label for="saleEndDate">Sale End Date:</label>
                            <input type="date" id="saleEndDate" name="saleEndDate" 
                                    min="@DateTime.Now.ToString("yyyy-MM-dd")" 
                                    max="@DateTime.Now.AddDays(7).ToString("yyyy-MM-dd")" 
                                    required />
                        </div>
                    </fieldset>
                    <button type="submit" class="btn btn-primary">Apply Discount</button>
                </form>
            </div>
        </div>



        <h2>Welcome!</h2>
        <p>Select an option from the sidebar to display data here.</p>

    </div>
</div>

<script>
    let data = @Json.Serialize(Model);
    let bookviewmodel = data.bookViewModel;
    console.log(bookviewmodel);
    
    

    document.addEventListener("DOMContentLoaded", () => {
    // Sidebar Navigation
    const sidebarLinks = document.querySelectorAll(".adminFunctions .nav-link");
    const sections = {
        generalData: document.querySelector(".galleryManagerDisplay"),
        galleryManagerDisplay: document.querySelector(".galleryManagerDisplay"),
        ManageUsersDisplay: document.querySelector("#ManageUsersDisplay"),
        discount: document.querySelector(".discount")
    };

    sidebarLinks.forEach(link => {
        link.addEventListener("click", (event) => {
            event.preventDefault();

            // Hide all sections
            Object.values(sections).forEach(section => {
                if (section) section.style.display = "none";
            });

            // Show the selected section
            const functionType = link.getAttribute("data-function");
            const targetSection = sections[functionType];
            if (targetSection) {
                targetSection.style.display = "block";
            }

            // Update active link
            sidebarLinks.forEach(l => l.classList.remove("active"));
            link.classList.add("active");
        });
    });

    // Sale End Date Validation
    const saleEndDateInput = document.getElementById("saleEndDate");
    if (saleEndDateInput) {
        saleEndDateInput.addEventListener("input", () => {
            const currentDate = new Date();
            const maxDate = new Date();
            maxDate.setDate(currentDate.getDate() + 7);

            const selectedDate = new Date(saleEndDateInput.value);

            if (selectedDate > maxDate) {
                alert("Sale End Date cannot be more than 7 days from today.");
                saleEndDateInput.value = ""; // Reset the input
            }
        });
    }

    // File Upload Validation
    const uploadButton = document.querySelector(".upload-butt");
    const coverInput = document.getElementById("coverImage");

    if (coverInput && uploadButton) {
        coverInput.addEventListener("change", (event) => {
            const file = event.target.files[0];
            if (file) {
                const allowedExtensions = ['.jpg', '.jpeg'];
                const fileExtension = file.name.split('.').pop().toLowerCase();

                if (!allowedExtensions.includes(`.${fileExtension}`)) {
                    alert("Invalid file type! Please upload a JPG image.");
                    coverInput.value = ""; // Reset the input
                } else {
                    alert(`File "${file.name}" is ready to upload.`);
                }
            }
        });

        uploadButton.addEventListener("click", (event) => {
            const file = coverInput.files[0];
            if (!file) {
                alert("Please select a file before uploading.");
                event.preventDefault(); // Prevent form submission
            } else {
                alert(`Uploading "${file.name}"...`);
            }
        });
    }

    // User Details Management
    const userLinks = document.querySelectorAll(".nav-link[data-username]");
    const userDetailsContent = document.getElementById("UserDetailsContent");

    userLinks.forEach(link => {
        link.addEventListener("click", (event) => {
            event.preventDefault();

            // Get user details from data attributes
            const username = link.getAttribute("data-username");
            const email = link.getAttribute("data-email");
            const firstName = link.getAttribute("data-firstname");
            const lastName = link.getAttribute("data-lastname");
            const phone = link.getAttribute("data-phone");
            const type = link.getAttribute("data-type");

            // Update the UserDetailsContent section
            userDetailsContent.innerHTML = `
                <div>
                    <h4>Details for: ${username}</h4>
                    <p><strong>Email:</strong> ${email}</p>
                    <p><strong>First Name:</strong> ${firstName}</p>
                    <p><strong>Last Name:</strong> ${lastName}</p>
                    <p><strong>Phone:</strong> ${phone}</p>
                    <p><strong>Type:</strong> ${type}</p>
                </div>
                <button class="btn btn-primary" onclick="editUser('${username}')">Edit User</button>
            `;
        });
    });
});
</script>