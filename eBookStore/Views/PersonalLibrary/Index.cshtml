@model List<eBookStore.Models.ViewModels.BookViewModel>
@{
    ViewData["Title"] = "My Library";
    var userId = Context.Session.GetInt32("userId"); 
    if (userId == null)
    {
        Context.Response.Redirect("/Auth/Login");
        return;
    }
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">My Library</h2>
        <div class="search-container">
            <div class="search-wrapper">
                <input type="text" 
                       id="searchInput"
                       class="form-control search-input" 
                       placeholder="Search my library..."
                       aria-label="Search">
                <i class="bi bi-search search-icon"></i>
            </div>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Info"] != null)
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            @TempData["Info"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div id="booksContainer">
        @if (!Model.Any())
        {
            <div class="text-center empty-library py-5">
                <i class="bi bi-book display-1 text-muted mb-3"></i>
                <h3>Your library is empty</h3>
                <p class="text-muted">Start adding books to build your personal collection</p>
                <a asp-controller="Home" asp-action="showBook" class="btn btn-primary mt-3">
                    Browse Books
                </a>
            </div>
        }
        else
        {
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                @foreach (var book in Model)
                {
                    var isBookBorrowed = ViewBag.BorrowedBooks?.Any((Func<dynamic, bool>)(b => b.book.id == book.book.id)) ?? false;
                    
                    <div class="col book-item">
                        <div class="card h-100 book-card">
                            <div class="card-img-wrapper">
                                @if (book.coverModel != null)
                                {
                                    <img src="images/bookCovers/@book.coverModel.imgName" class="card-img-top" alt="@book.book.title">
                                }
                                else
                                {
                                    <img src="/images/default-book-cover.jpg" class="card-img-top" alt="Default Cover">
                                }
                                <div class="card-overlay">
                                    <a asp-action="Details" asp-route-id="@book.book.id" class="btn btn-light btn-sm">View Details</a>
                                </div>
                            </div>
                            <div class="card-body">
                                <h5 class="card-title text-truncate" title="@book.book.title">@book.book.title</h5>
                                <div class="book-info">
                                    <span class="publisher">
                                        <i class="bi bi-building"></i>
                                        @string.Join(", ", book.publishers.Select(p => p.name))
                                    </span>
                                    <span class="genre">
                                        <i class="bi bi-tag"></i>
                                        @(book.genreModel?.name ?? "Unknown Genre")
                                    </span>
                                    <span class="date">
                                        <i class="bi bi-calendar3"></i>
                                        @book.book.pubDate.ToString("MMM yyyy")
                                    </span>
                                    @if (book.book.canBorrow)
                                    {
                                        <span class="borrow-status">
                                            <i class="bi bi-book"></i>
                                            @if (isBookBorrowed)
                                            {
                                                <span class="badge bg-success">Borrowed</span>
                                                var borrowedBook = ViewBag.BorrowedBooks.FirstOrDefault((Func<dynamic, bool>)(b => b.book.id == book.book.id));
                                                if (borrowedBook != null)
                                                {
                                                    var dueDate = borrowedBook.DueDate;
                                                    var daysLeft = (dueDate - DateTime.UtcNow).Days;
                                                    var dueDateClass = daysLeft <= 5 ? "text-danger" : "text-muted";
                                                    <small class="d-block @dueDateClass">
                                                        Due: @dueDate.ToString("MMM dd, yyyy")
                                                        @if (daysLeft <= 5)
                                                        {
                                                            <i class="bi bi-exclamation-circle"></i>
                                                        }
                                                    </small>
                                                }
                                            }
                                            else if (book.book.amountOfCopies > 0)
                                            {
                                                <span class="badge bg-info">Available</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">Unavailable</span>
                                            }
                                        </span>
                                    }
                                </div>
                            </div>
                            <div class="card-footer bg-transparent">
                                <div class="d-flex justify-content-between align-items-center">
                                    <form asp-action="RemoveBook" asp-route-id="@book.book.id" method="post" class="d-inline remove-form">
                                        <button type="submit" class="btn btn-link text-danger remove-btn" onclick="return confirm('Remove this book from your library?')">
                                            <i class="bi bi-trash"></i> Remove
                                        </button>
                                    </form>
                                    @if (book.book.canBorrow)
                                    {
                                        @if (isBookBorrowed)
                                        {
                                            <form asp-action="ReturnBook" asp-route-id="@book.book.id" method="post" class="d-inline">
                                                <button type="submit" class="btn btn-outline-primary btn-sm">
                                                    <i class="bi bi-arrow-return-left"></i> Return
                                                </button>
                                            </form>
                                        }
                                        else if (book.book.amountOfCopies > 0)
                                        {
                                            <form asp-action="BorrowBook" asp-route-id="@book.book.id" method="post" class="d-inline">
                                                <button type="submit" class="btn btn-outline-success btn-sm">
                                                    <i class="bi bi-book"></i> Borrow
                                                </button>
                                            </form>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            const searchInput = $('#searchInput');
            searchInput.on('keydown', function(event) {
                if (event.key === 'Enter') {
                    event.preventDefault();
                    return false;
                }
            });
            let searchTimer;

            searchInput.on('input', function() {
                clearTimeout(searchTimer);
                const query = $(this).val();

                searchTimer = setTimeout(function() {
                    filterBooks(query);
                }, 300);
            });

            function filterBooks(query) {
                $('.book-item').each(function() {
                    const title = $(this).find('.card-title').text().toLowerCase();
                    const publisher = $(this).find('.publisher').text().toLowerCase();
                    const genre = $(this).find('.genre').text().toLowerCase();

                    if (query === '' || 
                        title.includes(query.toLowerCase()) ||
                        publisher.includes(query.toLowerCase()) ||
                        genre.includes(query.toLowerCase())) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });

                if ($('.book-item:visible').length === 0) {
                    if (!$('.no-results').length) {
                        $('#booksContainer').append(`
                            <div class="text-center empty-library py-5 no-results">
                                <i class="bi bi-search display-1 text-muted mb-3"></i>
                                <h3>No books found</h3>
                                <p class="text-muted">Try adjusting your search terms</p>
                            </div>
                        `);
                    }
                } else {
                    $('.no-results').remove();
                }
            }

            setTimeout(function() {
                $('.alert').alert('close');
            }, 5000);
        });
    </script>
}
